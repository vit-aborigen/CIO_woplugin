def largest_histogram(histogram):
    result, width = 0, len(histogram) + 1
    for i in range(1, width):
        for j in range(width - i):
            rect = i * min(histogram[j:][:i])
            result = max(result, rect)
    return result

if __name__ == "__main__":
    # These "asserts" using only for self-checking and not necessary for auto-testing
    assert largest_histogram([5]) == 5, "one is always the biggest"
    assert largest_histogram([5, 3]) == 6, "two are smallest X 2"
    assert largest_histogram([1, 1, 4, 1]) == 4, "vertical"
    assert largest_histogram([1, 1, 3, 1]) == 4, "horizontal"
    assert largest_histogram([2, 1, 4, 5, 1, 3, 3]) == 8, "complex"
    print(largest_histogram([0,3,6,9,12,15,18,22,25,28,31,34,37,41,44,47,50,53,56,60,63,66,69,72,75,79,82,85,88,91,94,97,101,104,107,110,113,116,119,123,126,129,132,135,138,141,145,148,151,154,157,160,163,166,169,173,176,179,182,185,188,191,194,197,201,204,207,210,213,216,219,222,225,228,231,235,238,241,244,247,250,253,256,259,262,265,268,271,274,277,280,283,286,289,292,296,299,302,305,308,311,314,317,320,323,326,329,332,335,338,340,343,346,349,352,355,358,361,364,367,370,373,376,379,382,385,388,391,393,396,399,402,405,408,411,414,417,419,422,425,428,431,434,437,439,442,445,448,451,454,456,459,462,465,468,470,473,476,479,482,484,487,490,493,495,498,501,504,506,509,512,514,517,520,523,525,528,531,533,536,539,541,544,547,549,552,555,557,560,562,565,568,570,573,575,578,581,583,586,588,591,593,596,598,601,603,606,609,611,614,616,618,621,623,626,628,631,633,636,638,641,643,645,648,650,653,655,657,660,662,665,667,669,672,674,676,679,681,683,686,688,690,692,695,697,699,701,704,706,708,710,713,715,717,719,721,724,726,728,730,732,734,737,739,741,743,745,747,749,751,753,756,758,760,762,764,766,768,770,772,774,776,778,780,782,784,786,788,790,792,794,795,797,799,801,803,805,807,809,810,812,814,816,818,820,821,823,825,827,829,830,832,834,836,837,839,841,842,844,846,848,849,851,853,854,856,857,859,861,862,864,865,867,869,870,872,873,875,876,878,879,881,882,884,885,887,888,890,891,893,894,895,897,898,900,901,902,904,905,906,908,909,910,912,913,914,915,917,918,919,920,922,923,924,925,926,928,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,961,962,963,964,965,966,966,967,968,969,970,970,971,972,973,973,974,975,975,976,977,977,978,979,979,980,981,981,982,982,983,984,984,985,985,986,986,987,987,988,988,989,989,990,990,990,991,991,992,992,992,993,993,994,994,994,995,995,995,995,996,996,996,996,997,997,997,997,998,998,998,998,998,998,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,998,998,998,998,998,998,997,997,997,997,997,996,996,996,995,995,995,995,994,994,994,993,993,992,992,992,991,991,991,990,990,989,989,988,988,987,987,986,986,985,985,984,984,983,982,982,981,981,980,979,979,978,977,977,976,975,975,974,973,973,972,971,970,970,969,968,967,967,966,965,964,963,962,961,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,932,931,930,929,928,927,925,924,923,922,921,919,918,917,916,914,913,912,910,909,908,906,905,904,902,901,900,898,897,896,894,893,891,890,888,887,885,884,883,881,880,878,877,875,873,872,870,869,867,866,864,862,861,859,858,856,854,853,851,849,848,846,844,843,841,839,838,836,834,832,831,829,827,825,823,822,820,818,816,814,813,811,809,807,805,803,801,799,798,796,794,792,790,788,786,784,782,780,778,776,774,772,770,768,766,764,762,760,758,756,754,752,750,747,745,743,741,739,737,735,733,730,728,726,724,722,720,717,715,713,711,708,706,704,702,700,697,695,693,690,688,686,684,681,679,677,674,672,670,667,665,662,660,658,655,653,651,648,646,643,641,638,636,634,631,629,626,624,621,619,616,614,611,609,606,604,601,599,596,594,591,589,586,583,581,578,576,573,571,568,565,563,560,557,555,552,550,547,544,542,539,536,534,531,528,526,523,520,517,515,512,509,507,504,501,498,496,493,490,487,485,482,479,476,474,471,468,465,462,460,457,454,451,448,445,443,440,437,434,431,428,426,423,420,417,414,411,408,405,403,400,397,394,391,388,385,382,379,376,373,370,367,365,362,359,356,353,350,347,344,341,338,335,332,329,326,323,320,317,314,311,308,305,302,299,296,293,290,287,284,281,278,275,272,269,266,262,259,256,253,250,247,244,241,238,235,232,229,226,223,220,216,213,210,207,204,201,198,195,192,189,185,182,179,176,173,170,167,164,161,157,154,151,148,145,142,139,136,132,129,126,123,120,117,114,110,107,104,101,98,95,92,88,85,82,79,76,73,69,66,63,60,57,54,50,47,44,41,38,35,32,28,25,22,19,16,13,9,6,3]))
